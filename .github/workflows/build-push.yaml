name: "Docker Build & Push"
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      image_tag_version:
        description: "Version of image tag (after ':')"
        required: true


jobs:
  export_tag:
    name: "Generate Docker image tag"
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG_BASE: ghcr.io/david-lor/portforward
      IMAGE_TAG_VERSION_FILE: /tmp/image_tag_version.txt
    outputs:
      image_tag: ${{ steps.image_tag.outputs.image_tag }}

    steps:
      - name: "Identify image tag version (from push to main)"
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo latest > ${{ env.IMAGE_TAG_VERSION_FILE }}
      - name: "Set image tag version (from workflow dispatch)"
        if: ${{ github.event.inputs.image_tag_version }}
        run: echo ${{ github.event.inputs.image_tag_version }} > ${{ env.IMAGE_TAG_VERSION_FILE }}
      - name: "Fetch exported image tag version"
        id: image_tag_version
        uses: juliangruber/read-file-action@v1
        with:
          path: ${{ env.IMAGE_TAG_VERSION_FILE }}
      - name: "Format complete image tag"
        id: image_tag
        run: |-
          FULL_TAG="${{ env.IMAGE_TAG_BASE }}:${{ steps.image_tag_version.outputs.content }}"
          echo "Full tag: $FULL_TAG"
          echo "::set-output name=image_tag::$FULL_TAG"


  build_push:
    name: "Docker Build & Push"
    runs-on: ubuntu-latest
    needs:
      - export_tag
    env:
      IMAGE_TAG: ${{ needs.export_tag.outputs.image_tag }}

    steps:
    # Setup
      - name: "Checkout"
        uses: actions/checkout@master
        with:
          fetch-depth: 1

    # Registry login
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    # Build & Push
      - name: "Docker build"
        run: docker build . -t ${{ env.IMAGE_TAG }}
      - name: "Docker push"
        run: docker push ${{ env.IMAGE_TAG }}
